// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarParts.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20210220110100_somechanges")]
    partial class somechanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("CarsSuppliers", b =>
                {
                    b.Property<Guid>("CarsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SuppliersId")
                        .HasColumnType("char(36)");

                    b.HasKey("CarsId", "SuppliersId");

                    b.HasIndex("SuppliersId");

                    b.ToTable("CarsSuppliers");
                });

            modelBuilder.Entity("Entities.Models.Cars", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("CarsId");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("Entities.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("CategoryId");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("Entities.Models.Parts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("PartsId");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("CarsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("SuppliersId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CarsId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SuppliersId");

                    b.ToTable("parts");
                });

            modelBuilder.Entity("Entities.Models.Suppliers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("SupplierId");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("CarsSuppliers", b =>
                {
                    b.HasOne("Entities.Models.Cars", null)
                        .WithMany()
                        .HasForeignKey("CarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Suppliers", null)
                        .WithMany()
                        .HasForeignKey("SuppliersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Models.Parts", b =>
                {
                    b.HasOne("Entities.Models.Cars", "Cars")
                        .WithMany("Parts")
                        .HasForeignKey("CarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Category", "Categories")
                        .WithMany("Parts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Suppliers", "Suppliers")
                        .WithMany("Parts")
                        .HasForeignKey("SuppliersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cars");

                    b.Navigation("Categories");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Entities.Models.Cars", b =>
                {
                    b.Navigation("Parts");
                });

            modelBuilder.Entity("Entities.Models.Category", b =>
                {
                    b.Navigation("Parts");
                });

            modelBuilder.Entity("Entities.Models.Suppliers", b =>
                {
                    b.Navigation("Parts");
                });
#pragma warning restore 612, 618
        }
    }
}
